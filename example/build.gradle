import org.gradle.internal.os.OperatingSystem

plugins {
    id "java"
    id "application"
}

group "meteordevelopment"
version "0.1.0"
mainClassName = group + ".example.musicplayer.MusicPlayer"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":pulsar")

    implementation "com.udojava:EvalEx:2.7"
    implementation "com.badlogicgames.jlayer:jlayer:1.0.2-gdx"
    implementation "com.mpatric:mp3agic:0.9.1"

    implementation platform("org.lwjgl:lwjgl-bom:3.3.0")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.joml:joml:1.10.2"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    manifest {
        attributes "Main-Class": mainClassName
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
